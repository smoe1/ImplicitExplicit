; Parameters common to dogpack applications
[dogParams]
defaults_file = "$DOGPACK/config/dogParams_defaults.ini"
ndims       = 2          ; 1 or 2
mesh_type   = Cartesian  ; (either Cartesian or Unstructured) 
nout        = 4          ; number of output times to print results
tfinal      = 40         ; final time
dtv(1)      = 0.018   	 ; initial dt
;dtv(2)      = 1.0e10     ; max allowable dt 
dtv(2)      = 1e-3       ; max allowable dt 
cflv(1)     = 0.20       ; max allowable Courant number 1/(2k-1)
cflv(2)     = 0.19       ; desired Courant number
nv          = 50000      ; max number of time steps per call to DogSolve
time_stepping_method = Runge-Kutta ; (e.g., Runge-Kutta, SDC, Lax-Wendroff, User-Defined)
limiter_method = moment ; (e.g., moment, viscosity)
space_order = 1   ; =method(1)= order of accuracy in space
time_order  = 3   ; =method(2)= order of accuracy in time
use_limiter = 1   ; =method(3)= use limiter (1-yes, 0-no)
verbosity   = 1   ; =method(4)= verbosity of output
mcapa       = 0   ; =method(5)= mcapa (capacity function index in aux arrays)
maux        = 0   ; =method(6)= maux (number of aux arrays, maux >= mcapa)
source_term = 1   ; =method(7)= source term (1-yes, 0-no)
flux_term = 0 ; 0 turns off flux term
meqn        = 14  ; >=26; B_clean:>=27; E_clean:>=28; entropy:30
nrestart    = -1   ; if nonnegative restart from file q(nstart)_restart.dat
datafmt     = 1   ; 1 for ascii, 5 for hdf5.
matlab_addpath = "addpath([getenv('DOGPACK') '/matlab/plasma']);"
num_subintervals = 32 ; max number of outputs per call to DogSolve
;which_compnt_divfree = 11 ; 21,24 ; first of each pair of consecutive cmpnts
; -------------------------------------------------
;   Cartesian grid data (ignored if Unstructured)
; -------------------------------------------------
[grid]
; mx and my are virtual grid if enforced_symmetry <= 4
mx    =      1    ; number of grid elements in x-direction
my    =      1 	  ; number of grid elements in y-direction
mbc   =     0     ; number of ghost cells on each boundary
; xlow and ylow are reset to -xhigh and -yhigh
xlow  =     0.0	              ; left end point
xhigh =     12.566370614359172 ; 6.283185307179586 ; right end point
ylow  =     0.0		      ; lower end point
yhigh =     6.283185307179586 ; 3.141592653589793 ; upper end point
;plot_rx = 2,4 ; ratio of mesh cells per plot cell in x-direction
;plot_ry = 2,4 ; ratio of mesh cells per plot cell in y-direction

[componentParams]
q_names{15} = entropy ; gas-dynamic entropy
q_names{14} = psi   ; B-field cleaning
q_names{13} = E3    ; 3-electric field
q_names{12} = B2    ; 2-magnetic field
q_names{11} = B1    ; 1-magnetic field
q_names{10} = Ni33  ; energy_33 (ion)
q_names{9}  = Ni23  ; energy_23 (ion)
q_names{8}  = Ni22  ; energy_22 (ion)
q_names{7}  = Ni13  ; energy_13 (ion)
q_names{6}  = Ni12  ; energy_12 (ion)
q_names{5}  = Ni11  ; energy_11 (ion)
q_names{4}  = Mi3   ; 3-momentum (ion)
q_names{3}  = Mi2   ; 2-momentum (ion)
q_names{2}  = Mi1   ; 1-momentum (ion)
q_names{1}  = rho_i ; rho (ion)

; === application parameters below this line ===

[plasma]
model_name = p10
riemann_subsystem_firstindices = 1,11,13,15

; model parameters
; 
gamma          = 1.666666666666667    ; (adiabatic gas constant)
spc_mass_mode  = ion_mass ; total_mass or ion_mass
ion_mass       = 1.0
mass_ratio     = 1.0
cs_light       = 1.0     ; speed of light
iso_period_type = trace ; constant, trace (p:=tr(P)/3), det (p:=cbrt(det(P)))
ion_iso_period =  -5      ; (0.0=instantaneously relax, <0=don't)
base_iso_period = 50 ;iso_period = base*sqrt(p^3/rho^5)*m^3=base*sqrt(m*T^3)/n
source_type_Emom = simple; split;
source_type_rotP = simple; split;
source_type_isoP = simple; split;
; 
; method parameters
; [plasma.method]
allow_fast_sound  = 1 ; if sound>light: -1=error, 0=warn, 1=proceed
cc                = 1.05  ; PHM eqn modifier
eps_Bcp = 4. ; decay rate of magnetic field correction potential
eps_Ecp = 4. ; decay rate of electric field correction potential
clean_E_field = 1 ; (E_field is cleaned only if this is nonzero and meqn >=28)

; GEM problem parameters (ICs and BCs)
[GEM]
temp_ratio     = 1.0      ; ratio of ion temperature to elc temperature
B_0            = 1.0      ; typical magnetic field strength
n_0            = 1.0      ; typical number density
n_b            = 0.2      ; background number density per n_0.
yBCs = conducting_wall    ; open, copy, conducting_wall
xBCs = periodic           ; open, copy, periodic
domain_scaling = 1.0      ; (1 = GEM)
B_guide = 0.              ; initial guide field
enforce_symmetry = 1
mesh_is_virtual = 0 ; 1: mx, my specify full mesh. 0: computational

