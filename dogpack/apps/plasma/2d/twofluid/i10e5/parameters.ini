; Parameters common to dogpack applications
[dogParams]
defaults_file = "$DOGPACK/config/dogParams_defaults.ini"
ndims       = 2          ; 1, 2, or 3
mesh_type   = Cartesian  ; (either Cartesian or Unstructured) 
nout        = 160        ; number of output times to print results
tfinal      = 40         ; final time
dtv(1)      = 0.005   	 ; initial dt
dtv(2)      = 1.0e10     ; max allowable dt 
cflv(1)     = 0.20       ; max allowable Courant number 1/(2k-1)
cflv(2)     = 0.19       ; desired Courant number
nv          = 5000       ; max number of time steps per call to DogSolve
time_stepping_method = Runge-Kutta ; (e.g., Runge-Kutta, SDC, Lax-Wendroff, User-Defined)
space_order = 3   ; =method(1)= order of accuracy in space
time_order  = 3   ; =method(2)= order of accuracy in time
use_limiter = 1   ; =method(3)= use limiter (0: no, >=1: yes)
verbosity   = 1   ; =method(4)= verbosity of output
mcapa       = 0   ; =method(5)= mcapa (capacity function index in aux arrays)
maux        = 2   ; =method(6)= maux (number of aux arrays, maux >= mcapa)
source_term = 1   ; =method(7)= source term (1-yes, 2-no)
meqn        = 23  ; >=21; B_clean:>=22; E_clean:>=23; entropy:25
nrestart    = -1  ; if nonnegative restart from file q(nstart)_restart.dat
nout_per_restart = 16
nout_per_plot = 4,1
datafmt     = 1   ; 1 for ascii, 5 for hdf5.
matlab_addpath = "addpath([getenv('DOGPACK') '/matlab/plasma']);"
num_subintervals = 32 ; max number of outputs per call to DogSolve
which_compnt_divfree = 16 ;"16,19" ; first of each pair of consecutive cmpnts
subsystem_firstindices = 1,11,16 ; first index of each subsystem
; -------------------------------------------------
;   Cartesian grid data (ignored if Unstructured)
; -------------------------------------------------
[grid]
; mx and my are virtual grid if enforced_symmetry <= 4
mx    =    32     ; number of grid elements in x-direction
my    =    16  	  ; number of grid elements in y-direction
mbc   =     2     ; number of ghost cells on each boundary
; xlow and ylow are reset to -xhigh and -yhigh
xlow  =     0.0	              ; left end point
xhigh =     12.566370614359172 ; 6.283185307179586 ; right end point
ylow  =     0.0		      ; lower end point
yhigh =     6.283185307179586 ; 3.141592653589793 ; upper end point
plot_rx = 2,4 ; ratio of mesh cells per plot cell in x-direction
plot_ry = 2,4 ; ratio of mesh cells per plot cell in y-direction

[componentParams]
; q_vars{10} = phi
; q_vars{9} = psi
; q_vars{8} = E
; q_vars{7} = B
; q_vars{6} = Ne
; q_vars{5} = Me
; q_vars{4} = rho_e
; q_vars{3} = Ni
; q_vars{2} = Mi
; q_vars{1} = rho_i
q_component_names{25} = entropy_e ; elc entropy
q_component_names{24} = entropy_i ; ion entropy
q_component_names{23} = phi   ; E-field cleaning
q_component_names{22} = psi   ; B-field cleaning
q_component_names{21} = E3    ; 3-electric field
q_component_names{20} = E2    ; 2-electric field
q_component_names{19} = E1    ; 1-electric field
q_component_names{18} = B3    ; 3-magnetic field
q_component_names{17} = B2    ; 2-magnetic field
q_component_names{16} = B1    ; 1-magnetic field
q_component_names{15} = N_e   ; energy (elc)
q_component_names{14} = Me3   ; 3-momentum (elc)
q_component_names{13} = Me2   ; 2-momentum (elc)
q_component_names{12} = Me1   ; 1-momentum (elc)
q_component_names{11} = rho_e ; rho (elc)
q_component_names{10} = Ni33  ; energy_33 (ion)
q_component_names{9}  = Ni23  ; energy_23 (ion)
q_component_names{8}  = Ni22  ; energy_22 (ion)
q_component_names{7}  = Ni13  ; energy_13 (ion)
q_component_names{6}  = Ni12  ; energy_12 (ion)
q_component_names{5}  = Ni11  ; energy_11 (ion)
q_component_names{4}  = Mi3   ; 3-momentum (ion)
q_component_names{3}  = Mi2   ; 2-momentum (ion)
q_component_names{2}  = Mi1   ; 1-momentum (ion)
q_component_names{1}  = rho_i ; rho (ion)

; default component type is scalar
;

; === application parameters below this line ===

[plasma]
model_name = i10e5
riemann_subsystem_firstindices = 1,11,16,20,22,24

; model parameters
; 
gamma          = 1.666666666666667    ; (adiabatic gas constant)
spc_mass_mode  = ion_mass ; total_mass or ion_mass
ion_mass       = 1.0
mass_ratio     = 25.
cs_light       = 20.0     ; speed of light
relaxation_type = simple_source ; instantaneous
iso_period_type = trace ; constant, trace, det
ion_iso_period =  -1    ; (0.0=instantaneously relax, <0=don't)
elc_iso_period =  0.    ; (0.0=instantaneously relax, <0=don't)
base_iso_period = 20   ; iso_period = base*sqrt(det(P)/rho^5)*m^3
; 
; method parameters
; [plasma.method]
allow_fast_sound  = 0 ; if sound>light: -1=error, 0=warn, 1=proceed
cc                = 1.05  ; PHM eqn modifier
eps_Bcp = 1. ; decay rate of magnetic field correction potential
eps_Ecp = 1. ; decay rate of electric field correction potential
clean_E_field     = 1     ; (0=no, 1=yes)

; GEM problem parameters (ICs and BCs)
[GEM]
temp_ratio     = 5.0
B_0            = 1.0      ; typical magnetic field strength
B_guide        = 0.0      ; guide field
n_0            = 1.0      ; typical number density
n_b            = 0.2      ; background number density per n_0.
yBCs = conducting_wall    ; open, copy, conducting_wall
xBCs = periodic           ; open, copy, periodic
domain_scaling = 1        ; (1 = GEM)
enforced_symmetry = 3     ; bits: 1=X, 2=Y, 4=(mx&my are actual mesh)

