; Parameters common to dogpack applications
[dogParams]
defaults_file = "$DOGPACK/config/dogParams_defaults.ini"
matlab_addpath = "addpath([getenv('DOGPACK') '/matlab/plasma']);"
; options that control simulation
nrestart    = -1   ; if nonnegative restart from file q(nstart)_restart.dat
nout        = 160        ; number of output times to print results
tfinal      = 40         ; final time
dtv(1)      = 0.001   	 ; initial dt
dtv(2)      = 1.0e10     ; max allowable dt 
nv          = 5000       ; max number of time steps per call to DogSolve
time_stepping_method = Runge-Kutta ; (e.g., Runge-Kutta, SDC, Lax-Wendroff, User-Defined)
limiter_method = moment ; (e.g., moment, viscosity)
cflv(1)     = 0.20      ; max allowable Courant number 1/(2k-1)
cflv(2)     = 0.19      ; desired Courant number
time_order  = 3   ; =method(2)= order of accuracy in time
; - spatial options
space_order = 3   ; =method(1)= order of accuracy in space
mesh_type   = Cartesian  ; (either Cartesian or Unstructured) 
use_limiter = 1   ; =method(3)= use limiter (1-yes, 0-no)
; options that describe the model
ndims       = 2          ; 1 or 2
meqn        = 47  ; >=46; B_clean:>=47; E_clean:>=48; entropy:50
maux        = 0   ; =method(6)= maux (number of aux arrays, maux >= mcapa)
mcapa       = 0   ; =method(5)= mcapa (capacity function index in aux arrays)
source_term = 1   ; =method(7)= source term (1-yes, 0-no)
splitting   = fsf ; none; 1st order: fs, sf; 2nd order: fsf, sfs
; options that only affect output
maintained_restart = 9800 ; q9800.dat, a9800.dat, t9800.ini
report_frame_idx = 9900 ; created when matlab asks.
datafmt     = 1   ; 1 for ascii, 5 for hdf5.
verbosity   = 1   ; =method(4)= verbosity of output
nout_per_restart = 16
nout_per_plot = 4,1
num_subintervals = 32 ; max number of outputs per call to DogSolve
;which_compnt_divfree = 21 ; 21,24 ; first of each pair of consecutive cmpnts
; -------------------------------------------------
;   Cartesian grid data (ignored if Unstructured)
; -------------------------------------------------
[grid]
; mx and my are virtual grid if enforced_symmetry <= 4
mx    =      64   ; number of grid elements in x-direction
my    =      32	  ; number of grid elements in y-direction
mbc   =     2     ; number of ghost cells on each boundary
; xlow and ylow are reset to -xhigh and -yhigh
xlow  =     0.0	              ; left end point
xhigh =     12.566370614359172 ; 6.283185307179586 ; right end point
ylow  =     0.0		      ; lower end point
yhigh =     6.283185307179586 ; 3.141592653589793 ; upper end point
; options that only affect output
plot_rx = 2,4 ; ratio of mesh cells per plot cell in x-direction
plot_ry = 2,4 ; ratio of mesh cells per plot cell in y-direction

[componentParams]
; q_vars{10} = phi
; q_vars{9} = psi
; q_vars{8} = E
; q_vars{7} = B
; q_vars{6} = Ne
; q_vars{5} = Me
; q_vars{4} = rho_e
; q_vars{3} = Ni
; q_vars{2} = Mi
; q_vars{1} = rho_i
q_component_names{50} = entropy_e
q_component_names{49} = entropy_i
q_component_names{48} = phi   ; E-field cleaning
q_component_names{47} = psi   ; B-field cleaning
q_component_names{46} = E3    ; 3-electric field
q_component_names{45} = E2    ; 2-electric field
q_component_names{44} = E1    ; 1-electric field
q_component_names{43} = B3    ; 3-magnetic field
q_component_names{42} = B2    ; 2-magnetic field
q_component_names{41} = B1    ; 1-magnetic field
q_component_names{40} = QNe333
q_component_names{39} = QNe233
q_component_names{38} = QNe223
q_component_names{37} = QNe222
q_component_names{36} = QNe133
q_component_names{35} = QNe123
q_component_names{34} = QNe122
q_component_names{33} = QNe113
q_component_names{32} = QNe112
q_component_names{31} = QNe111
q_component_names{30} = Ne33  ; energy_33 (elc)
q_component_names{29} = Ne23  ; energy_23 (elc)
q_component_names{28} = Ne22  ; energy_22 (elc)
q_component_names{27} = Ne13  ; energy_13 (elc)
q_component_names{26} = Ne12  ; energy_12 (elc)
q_component_names{25} = Ne11  ; energy_11 (elc)
q_component_names{24} = Me3   ; 3-momentum (elc)
q_component_names{23} = Me2   ; 2-momentum (elc)
q_component_names{22} = Me1   ; 1-momentum (elc)
q_component_names{21} = rho_e ; rho (elc)
q_component_names{20} = QNi333
q_component_names{19} = QNi233
q_component_names{18} = QNi223
q_component_names{17} = QNi222
q_component_names{16} = QNi133
q_component_names{15} = QNi123
q_component_names{14} = QNi122
q_component_names{13} = QNi113
q_component_names{12} = QNi112
q_component_names{11} = QNi111
q_component_names{10} = Ni33  ; energy_33 (ion)
q_component_names{9}  = Ni23  ; energy_23 (ion)
q_component_names{8}  = Ni22  ; energy_22 (ion)
q_component_names{7}  = Ni13  ; energy_13 (ion)
q_component_names{6}  = Ni12  ; energy_12 (ion)
q_component_names{5}  = Ni11  ; energy_11 (ion)
q_component_names{4}  = Mi3   ; 3-momentum (ion)
q_component_names{3}  = Mi2   ; 2-momentum (ion)
q_component_names{2}  = Mi1   ; 1-momentum (ion)
q_component_names{1}  = rho_i ; rho (ion)

; default component type is scalar
;

; === application parameters below this line ===

[plasma]
model_name = g20
riemann_subsystem_firstindices = 1,21,41,45,47,49 ; first index of each subsystem

; model parameters
; 
gamma          = 1.666666666666667    ; (adiabatic gas constant)
spc_mass_mode  = ion_mass ; total_mass or ion_mass
ion_mass       = 1.0
mass_ratio     = 25.
cs_light       = 20.0     ; speed of light

; relaxation periods (0.0=instantaneously relax, <0=don't)
;
relaxation_type = simple_source ; instantaneous
ion_prandtl_number = 1.0   ; heat decay rate over isotropization rate
elc_prandtl_number = 1.0   ; heat decay rate over isotropization rate
iso_period_type = det ; constant, trace (p:=tr(P)/3), det (p:=cbrt(det(P)))
ion_iso_period =  -5      ; (0.0=instantaneously relax, <0=don't)
elc_iso_period =  -1      ; (0.0=instantaneously relax, <0=don't)
base_iso_period =  50   ; iso_period = base*sqrt(p^3/rho^5)*m^3
source_type_Emom = simple ;split support has been removed
source_type_rotP = simple ;split support has been removed
source_type_isoP = split ;simple support has been removed

; method parameters
; [plasma.method]
allow_fast_sound  = 1 ; if sound>light: -1=error, 0=warn, 1=proceed
cc                = 1.05  ; PHM eqn modifier
eps_Bcp = 0. ; decay rate of magnetic field correction potential
eps_Ecp = 4. ; decay rate of electric field correction potential
clean_E_field = 1 ; (E_field is cleaned only if this is nonzero and meqn >=28)

; GEM problem parameters (ICs and BCs)
[GEM]
temp_ratio     = 5
B_0            = 1.0      ; typical magnetic field strength
n_0            = 1.0      ; typical number density
n_b            = 0.2      ; background number density per n_0.
psi_0_over_B_0 = 0.1      ; strength of magnetic field perturbation
yBCs = conducting_wall    ; open, copy, conducting_wall
xBCs = periodic           ; open, copy, periodic
domain_scaling = 1.0      ; (1 = GEM)
B_guide = 0.              ; initial guide field
enforce_symmetry = 1
;enforce_flip_symmetry = 0 ; uncomment to make B_guide=0 act like nonzero
mesh_is_virtual = 1 ; 1: mx, my specify full mesh. 0: computational
; The following is deprecated
;enforced_symmetry = 3     ; bits: 1=X, 2=Y, 4=(mx&my are actual mesh)

