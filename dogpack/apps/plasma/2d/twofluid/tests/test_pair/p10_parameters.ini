; Parameters common to dogpack applications
[dogParams]
defaults_file = "$DOGPACK/config/dogParams_defaults.ini"
matlab_addpath = "addpath([getenv('DOGPACK') '/matlab/plasma']);"
; options that control simulation
nrestart    = -1   ; if nonnegative restart from file q(nstart)_restart.dat
nout        = 160        ; number of output times to print results
tfinal      = .2         ; final time
dtv(1)      = 0.018   	 ; initial dt
dtv(2)      = 1.0e10     ; max allowable dt 
nv          = 5000       ; max number of time steps per call to DogSolve
time_stepping_method = Runge-Kutta ; (e.g., Runge-Kutta, SDC, Advec)
limiter_method = moment ; (e.g., moment, viscosity)
cflv(1)     = 0.20       ; max allowable Courant number 1/(2k-1)
cflv(2)     = 0.19       ; desired Courant number
time_order  = 3   ; =method(2)= order of accuracy in time
; - spatial options
space_order = 3   ; =method(1)= order of accuracy in space
mesh_type   = Cartesian  ; (either Cartesian or Unstructured) 
use_limiter = 1   ; =method(3)= use limiter (0: no, >=1: yes)
;which_compnt_divfree = 11 ; comma-separated-list, only starting cmpnt
; options that describe the model
ndims       = 2          ; 1 or 2
meqn        = 14  ; >=13; div_clean:>=14, entropy:>=15
maux        = 0   ; =method(6)= maux (number of aux arrays, maux >= mcapa)
mcapa       = 0   ; =method(5)= mcapa (capacity function index in aux arrays)
source_term = 1   ; =method(7)= source term (1-yes, 2-no)
; options that only affect output
datafmt     = 1   ; 1 for ascii, 5 for hdf5.
verbosity   = 1   ; =method(4)= verbosity of output
nout_per_restart = 1
;nout_per_plot = 4,1
num_subintervals = 32 ; max number of outputs per call to DogSolve
;use_divfree = 0   ; (1-yes, 0-no)
;which_compnt_divfree = 11 ; enter first of each pair of consecutive cmpnts
; -------------------------------------------------
;   Cartesian grid data (ignored if Unstructured)
; -------------------------------------------------
[grid]
; mx and my are virtual grid if enforced_symmetry <= 4
mx    =     16    ; number of grid elements in x-direction
my    =     8  	  ; number of grid elements in y-direction
mbc   =     2     ; number of ghost cells on each boundary
xlow  =     0.0	              ; left end point
xhigh =     12.566370614359172 ; 6.283185307179586 ; right end point
ylow  =     0.0		      ; lower end point
yhigh =     6.283185307179586 ; 3.141592653589793 ; upper end point
; options that only affect output
plot_rx = 2,4 ; ratio of mesh cells per plot cell in x-direction
plot_ry = 2,4 ; ratio of mesh cells per plot cell in y-direction

[componentParams]
q_names{15} = entropy ; gas-dynamic entropy
q_names{14} = psi   ; B-field cleaning
q_names{13} = E3    ; 3-electric field
q_names{12} = B2    ; 2-magnetic field
q_names{11} = B1    ; 1-magnetic field
q_names{10} = Ni33  ; energy_33 (ion)
q_names{9}  = Ni23  ; energy_23 (ion)
q_names{8}  = Ni22  ; energy_22 (ion)
q_names{7}  = Ni13  ; energy_13 (ion)
q_names{6}  = Ni12  ; energy_12 (ion)
q_names{5}  = Ni11  ; energy_11 (ion)
q_names{4}  = Mi3   ; 3-momentum (ion)
q_names{3}  = Mi2   ; 2-momentum (ion)
q_names{2}  = Mi1   ; 1-momentum (ion)
q_names{1}  = rho_i ; rho (ion)

; component parameters for plotting purposes
; 
; tensor=1, pseudotensor=-1:
flip.rho_i = 1;
flip.Mi    = 1;

; === application parameters below this line ===

[plasma]
model_name = p10
riemann_subsystem_firstindices = 1,11,13,15

; model parameters
; 
gamma          = 1.666666666666667    ; (adiabatic gas constant)
; [plasma.twoFluid]
spc_mass_mode  = ion_mass ; total_mass or ion_mass
ion_mass       = 1.0
mass_ratio     = 1.0
; [plasma.maxwell]
cs_light       = 10.0     ; speed of light
; 
; relaxation periods (0.0=instantaneously relax, <0=don't)
; 
ion_iso_period = -1
elc_iso_period = -1
base_iso_period = -50   ; iso_period = base*sqrt(det(P)/rho^5)*m^3
ion_lat_iso_timescale = -1.
elc_lat_iso_timescale = -1.
slowing_period = -1
trigger_mui3 = -1 ; mass times drift velocity at which resistivity kicks in
slowing_rate_slope = -1
; 
; method parameters
; [plasma.method]
cc                = 1.05  ; PHM eqn modifier
eps_Bcp = 0. ; decay rate of magnetic field correction potential
clean_E_field     = 0     ; (0=no, 1=yes)
allow_fast_sound  = 0 ; if sound>light: -1=error, 0=warn, 1=proceed
; 
; GEM problem parameters (ICs and BCs)
[GEM]
temp_ratio     = 1.0
B_0            = 1.0      ; typical magnetic field strength
BCs            = 1        ; (1=conducting wall, 2=periodic)
domain_scaling = 1.0      ; (1 = GEM)
B_guide = 0.              ; initial guide field
enforce_symmetry = 1
;enforce_flip_symmetry = 0 ; uncomment to make B_guide=0 act like nonzero
mesh_is_virtual = 1 ; 1: mx, my specify full mesh. 0: computational
; The following is deprecated
;enforced_symmetry = 3     ; %(0=not,1=X,2=Y,3=XY)
