
; Parameters common to dogpack applications
[dogParams]
defaults_file = "$DOGPACK/config/dogParams_defaults.ini"
ndims       = 2          ; 1, 2, or 3
mesh_type   = Cartesian  ; (either Cartesian or Unstructured) 
nout        = 1          ; number of output times to print results
tfinal      = 1.00       ; final time
dtv(1)      = 3.125000e-02      ; initial dt
dtv(2)      = 3.125000e-02      ; max allowable dt 
cflv(1)     = 5.10       ; max allowable Courant number
cflv(2)     = 5.00       ; desired Courant number
nv          = 500000     ; max number of time steps per call to DogSolve
time_stepping_method = User-Defined ; (e.g., Runge-Kutta, SDC, Lax-Wendroff, User-Defined)
;time_stepping_method = Runge-Kutta ; (e.g., Runge-Kutta, SDC, Lax-Wendroff, User-Defined)
limiter_method = moment ; (e.g., moment, viscosity)
space_order = 5   ; =method(1)= order of accuracy in space
time_order  = 2   ; =method(2)= order of accuracy in time
use_limiter = 0   ; =method(3)= use limiter (1-yes, 0-no)
verbosity   = 1   ; =method(4)= verbosity of output
mcapa       = 0   ; =method(5)= mcapa (capacity function index in aux arrays)
maux        = 2   ; =method(6)= maux (number of aux arrays, maux >= mcapa)
source_term = 1   ; =method(7)= source term (1-yes, 0-no)
meqn        = 1   ; number of equations
mrestart    = 0   ; restart from old data (1-yes, 0-no)
nstart      = 0   ; if mrestart==1: from file q(nstart)_restart.dat
datafmt     = 1   ; 1 for ascii, 5 for hdf5.
; -------------------------------------------------
;   Cartesian grid data (ignored if Unstructured)
; -------------------------------------------------
[grid]
mx    =  320  ; number of grid elements in x-direction
my    =  320  ; number of grid elements in y-direction
mbc   = 2        ; number of ghost cells on each boundary

xlow  = -3.141592653589793
xhigh =  3.141592653589793
ylow  = -3.141592653589793
yhigh =  3.141592653589793

; -------------------------------------------------
;   Vlasov Parameters
; -------------------------------------------------
[vlasovparams]
;; Maxwellian Params: ;;
;;    fM(t=0,x,v) = rho_0 * exp(-0.5*v^2 / temp ) / sqrt(2*pi*temp) 
;;
;; Landau paramters:
;;
;;    f(t=0,x,v) = (1 + alpha*cos(kx) ) * fM(v)
;;
;alpha = 0.01
;k     = 0.5

